name: VP CD

on:
  push:
    branches:
      - master

jobs:
  deploy-server:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Login and push to container registry
        run: |
          echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/visual-productivity:server-latest vp-api
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/visual-productivity:server-latest

      - name: Copy docker-compose.server.yml file to vps
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.PRIVATE_KEY }}
          source: docker/docker-compose.server.yml
          target: /apps/vp

      - name: Deploy using ssh
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.PRIVATE_KEY }}
          port: 22
          script: |
            cd /apps/vp
            docker compose -f docker-compose.server.yml down
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/visual-productivity:server-latest
            echo "" > .env
            echo "API_PATH=${{ secrets.API_PATH }}" >> .env
            echo "PORT=${{ secrets.PORT }}" >> .env
            echo "DB_URL=${{ secrets.DB_URL }}" >> .env
            echo "DB_USER=${{ secrets.DB_USER }}" >> .env
            echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
            echo "GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}" >> .env
            echo "GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}" >> .env
            echo "SMTP_HOST=${{ secrets.SMTP_HOST }}" >> .env
            echo "SMTP_PORT=${{ secrets.SMTP_PORT }}" >> .env
            echo "SMTP_USERNAME=${{ secrets.SMTP_USERNAME }}" >> .env
            echo "SMTP_PASSWORD=${{ secrets.SMTP_PASSWORD }}" >> .env
            echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env
            echo "VP_ALLOWED_ORIGINS=${{ secrets.VP_ALLOWED_ORIGINS }}" >> .env
            echo "VP_ALLOWED_METHODS=${{ secrets.VP_ALLOWED_METHODS }}" >> .env
            echo "VP_ALLOWED_HEADERS=${{ secrets.VP_ALLOWED_HEADERS }}" >> .env
            echo "VP_REGISTER_PATTERN=${{ secrets.VP_REGISTER_PATTERN }}" >> .env
            export $(grep -v '^#' .env | xargs)
            docker compose -f docker-compose.server.yml up -d --build

  deploy-client:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js 16
        uses: actions/setup-node@v2
        with:
          node-version: 16.x

      - run: cd vp-ui && npm i && npm run build

      - name: Copy dist files to vps
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.PRIVATE_KEY }}
          source: vp-ui/dist/vp-ui/*
          target: /var/www/html/vp
          strip_components: 3
